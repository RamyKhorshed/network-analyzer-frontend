# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := protocol_compatibility
### Rules for action "protocol_compatibility":
quiet_cmd__Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility = ACTION Generating inspector protocol sources from protocol json definition $@
cmd__Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/deps/v8/src/inspector; mkdir -p $(obj)/gen/src; python ../../third_party/inspector_protocol/CheckProtocolCompatibility.py --stamp "$(obj)/gen/src/js_protocol.stamp" js_protocol.json

$(obj)/gen/src/js_protocol.stamp: obj := $(abs_obj)
$(obj)/gen/src/js_protocol.stamp: builddir := $(abs_builddir)
$(obj)/gen/src/js_protocol.stamp: export BUILT_FRAMEWORKS_DIR := ${abs_builddir}
$(obj)/gen/src/js_protocol.stamp: export BUILT_PRODUCTS_DIR := ${abs_builddir}
$(obj)/gen/src/js_protocol.stamp: export CONFIGURATION := ${BUILDTYPE}
$(obj)/gen/src/js_protocol.stamp: export PRODUCT_NAME := protocol_compatibility
$(obj)/gen/src/js_protocol.stamp: export SDKROOT := /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk
$(obj)/gen/src/js_protocol.stamp: export SRCROOT := ${abs_srcdir}/deps/v8/src/inspector
$(obj)/gen/src/js_protocol.stamp: export SOURCE_ROOT := ${SRCROOT}
$(obj)/gen/src/js_protocol.stamp: export TARGET_BUILD_DIR := ${abs_builddir}
$(obj)/gen/src/js_protocol.stamp: export TEMP_DIR := ${TMPDIR}
$(obj)/gen/src/js_protocol.stamp: export XCODE_VERSION_ACTUAL := 0910
$(obj)/gen/src/js_protocol.stamp: TOOLSET := $(TOOLSET)
$(obj)/gen/src/js_protocol.stamp: $(srcdir)/deps/v8/src/inspector/js_protocol.json FORCE_DO_CMD
	$(call do_cmd,_Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility)

all_deps += $(obj)/gen/src/js_protocol.stamp
action__Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility_outputs := $(obj)/gen/src/js_protocol.stamp


### Rules for final target.
# Build our special outputs first.
$(obj).target/deps/v8/src/inspector/protocol_compatibility.stamp: | $(action__Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility_outputs)

# Preserve order dependency of special output on deps.
$(action__Users_ramy_Development_projects_Module_3_Project_node_deps_v8_src_inspector_inspector_gyp_protocol_compatibility_target_protocol_compatibility_outputs): | 

$(obj).target/deps/v8/src/inspector/protocol_compatibility.stamp: TOOLSET := $(TOOLSET)
$(obj).target/deps/v8/src/inspector/protocol_compatibility.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/deps/v8/src/inspector/protocol_compatibility.stamp
# Add target alias
.PHONY: protocol_compatibility
protocol_compatibility: $(obj).target/deps/v8/src/inspector/protocol_compatibility.stamp

# Add target alias to "all" target.
.PHONY: all
all: protocol_compatibility

